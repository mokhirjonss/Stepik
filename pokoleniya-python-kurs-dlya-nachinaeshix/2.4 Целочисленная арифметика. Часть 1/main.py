# 2.4 Целочисленная арифметика. Часть 1

# Тема урока: работа с целыми числами

# Целочисленный тип данных
# Преобразование строки к целому числу
# Операции над целыми числами
# Решение задач

# Аннотация. Урок посвящен изучению работы с целыми числами. Изучим основные операции, а также научимся преобразовывать строки в числа.

# Целые числа
# Все предыдущие программы, которые мы писали, работали с текстовыми данными. Действительно, команда input() считывает строку текста. Однако во многих случаях нам нужно работать именно с числами. Чтобы в Python создать переменную целого типа данных, нужно опустить кавычки при объявлении переменной. Рассмотрим следующий код:

num1 = 7  # num1 - это число
num2 = 10  # num2 - это число
num3 = num1 + num2  # num3 - это число
print(num3)
# 17
# В результате выполнения такой программы будет выведено число 17.

# Запомни: числа обозначаются без кавычек, а строки — с кавычками.

# Основные операции с числами
# В языке Python, как и в математике, над числами можно совершать 4 основные операции (+, −, *, /).

# Рассмотрим следующую программу:
a = 3
b = 2
print(a + b)
print(a - b)
print(a * b)
print(a / b)
# Результатом выполнения такой программы будут числа:
# 5
# 1
# 6
# 1.5

# Порядок выполнения операций
# В математике существует порядок выполнения операций, определяющий, какие операции должны выполняться раньше других, даже если в выражении они написаны правее. Порядок выполнения операций в Python аналогичен порядку выполнения операций, которые вы изучали на уроках математики.

# Рассмотрим следующий код:

num1 = 2 + 3 * 4
num2 = (2 + 3) * 4
print(num1)
print(num2)
# 14
# 20

# Результатом выполнения такой программы будут числа 14 и 20. В переменной num1 будет храниться число 14, поскольку первым делом выполняется умножение, а уже затем сложение. В переменной num2 будет храниться число 20, поскольку скобки изменили приоритет выполнения операций.

# Запомни: первым делом выполняется умножение или деление, затем сложение и вычитание. Для изменения порядка выполнения операций понадобятся скобки.

# Преобразование типов
# Преобразование строки к целому числу. Для того, чтобы преобразовать строку к целому числу, мы используем команду int(). Рассмотрим следующий код:
s = '1992'
year = int(s)

# Переменная s имеет строковый тип данных. С помощью команды int(), мы преобразовали строку к целому числу и записали результат в переменную с именем year.  Мы используем новую команду (точнее, функцию) – int(). Она означает следующее: «Возьми то, что указано в качестве аргумента в скобках, и преврати это в целое число». Таким образом, переменная year имеет целый тип данных, а переменная s – строковый тип данных.

# Напишем программу, которая считывает два целых числа и выводит на экран их сумму. Следующий код тут не сработает:
num1 = input()
num2 = input()
print(num1 + num2)

# Python считает, что в переменных num1 и num2 находится текст, поскольку команда input() по умолчанию считывает именно текст. Для того, чтобы явно указать, что требуется работать с переменными целого типа, надо написать так:

num1 = int(input())
num2 = int(input())
print(num1 + num2)

# Запомни: для того, чтобы считать одно целое число, мы пишем следующий код:
num = int(input())

# Преобразование целого числа к строке. Для того, чтобы преобразовать целое число в строку, мы используем команду str(). Рассмотрим следующий код:
number = 17
s = str(17)

# Переменная num имеет целый тип данных. С помощью команды str() мы преобразовали целое число в строку и записали результат в переменную s. Таким образом, переменная num имеет целочисленный тип данных, а переменная s – строковый тип данных.

# Примечания
# Примечание 1. При работе с целочисленными переменными часто нужно осуществлять присвоение значению переменной целой математической формулы:
#
# <имя переменной> = <математическая формула>

# Примечание 2. Сокращение int происходит от английского integer – целый.

# Примечание 3. В большинстве языков программирования переменная целого типа имеет ограничения. Например, в языке C# переменная целого типа может принимать значения из диапазона
#  В Python реализована так называемая длинная арифметика, то есть, по сути, переменная целого типа не имеет ограничений.

# Примечание 4. Минус может использоваться для обозначения отрицательных чисел. А вот операции +, / и * всегда стоят между двумя переменными и что-то с ними делают.

num1 = -6  # унарный минус
num2 = 17 - 7  # бинарный минус

# Укажите значение переменной s после выполнения следующего кода:
# s = 0
# k = 30
# d = k - 5
# k = 2 * d
# s = k - 100
# -50

# Укажите значение переменной x после выполнения следующего кода:
#
# x = 3
# y = 4
# z = x + y
# z = z + 1
# x = y
# y = 5
# x = z + y + 7
# 20

# Что появится на экране после выполнения следующей программы?
#
# a = 4
# print(a, 'a')
# 4 a

# Три последовательных числа
# Напишите программу вывода на экран трех последовательно идущих чисел, каждое на отдельной строке. Первое число вводит пользователь, остальные числа вычисляются в программе.
#
# Формат входных данных
# На вход программе подается одно целое число.
#
# Формат выходных данных
# Программа должна вывести три последовательно идущих числа в соответствии с условием задачи.
#
# Примечание. Не используйте никакой текст и никакие другие аргументы внутри функции input(), т.к. это повлияет на вывод и ваша программа не пройдёт тесты.
number1 = int(input())
print(number1, number1 + 1, number1 + 2, sep='\n')

# 8
#
# 8
# 9
# 10

# Сумма трёх чисел
# Напишите программу, которая считывает три целых числа и выводит на экран их сумму. Каждое число записано в отдельной строке.
#
# Формат входных данных
# На вход программе подаётся три целых числа, каждое на отдельной строке.
#
# Формат выходных данных
# Программа должна вывести сумму введенных чисел.
#
# Примечание. Не используйте никакой текст и никакие другие аргументы внутри функции input(), т.к. это повлияет на вывод и ваша программа не пройдёт тесты.

numb1, numb2, numb3 = int(input()), int(input()), int(input())
print(numb1 + numb2 + numb3)
# 9
# 11
# 2

# 22

# Куб
# Напишите программу, вычисляющую объём куба и площадь его полной поверхности по введённому значению длины ребра.
#
# Формат входных данных
# На вход программе подается одно целое число – длина ребра.
#
# Формат выходных данных
# Программа должна вывести текст и числа в соответствии с условием задачи.
#
# Примечание 1. Объём куба и площадь полной поверхности можно вычислить по формулам
#
# Примечание 2. Обратите внимание, что на текущем этапе обучения мы не знаем про оператор возведения в степень, поэтому пользуемся определением степени числа – число умножается само на себя указанное количество раз.
#
# Примечание 3. Не используйте никакой текст и никакие другие аргументы внутри функции input(), т.к. это повлияет на вывод и ваша программа не пройдёт тесты.

length = int(input())
print(f"Объём = {length**3}\n"
      f"Площадь полной поверхности = {6 * length**2}")
# 25

# Объем = 15625
# Площадь полной поверхности = 3750

# Значение функции
# Формат входных данных
# На вход программе подаётся два целых числа, каждое на отдельной строке. В первой строке — значение
# во второй строке — значение
# Формат выходных данных
# Программа должна вывести значение функции по введённым числам
# Примечание. Обратите внимание, что на текущем этапе обучения мы не знаем про оператор возведения в степень, поэтому пользуемся определением степени числа – число умножается само на себя указанное количество раз.
a = int(input())
b = int(input())
print(3 * (a + b)**3 + 275 * b**2 - 127 * a - 41)
# 1
# 1

# 131

# Следующее и предыдущее
# Напишите программу, которая считывает целое число, после чего на экран выводится следующее и предыдущее целое число с пояснительным текстом.
#
# Формат входных данных
# На вход программе подаётся целое число.
#
# Формат выходных данных
# Программа должна вывести текст согласно условию задачи.

number2 = int(input())
print(f"Следующее за числом {number2} число: {number2 + 1}\n"
      f"Для числа {number2} предыдущее число: {number2 - 1}")
# 20

# Следующее за числом 20 число: 21
# Для числа 20 предыдущее число: 19

# Стоимость покупки
# Напишите программу, которая считает стоимость трех компьютеров, состоящих из монитора, системного блока, клавиатуры и мыши.
#
# Формат входных данных
# На вход программе подаётся четыре целых числа, каждое на отдельной строке. В первой строке — стоимость монитора, во второй строке — стоимость системного блока, в третьей строке — стоимость клавиатуры и в четвертой строке — стоимость мыши.
#
# Формат выходных данных
# Программа должна вывести одно число – стоимость покупки (трех компьютеров).

monitor = int(input())
system_unit = int(input())
keyboard = int(input())
mouse = int(input())
price_pc = 3 * (monitor + system_unit + keyboard + mouse)
print(price_pc)
# 9900
# 55600
# 3999
# 2990
#
# 217467

# Арифметические операции
# Напишите программу, в которой вычисляется сумма, разность и произведение двух целых чисел, введенных с клавиатуры.
#
# Формат входных данных
# На вход программе подаётся два целых числа, каждое на отдельной строке.
#
# Формат выходных данных
# Программа должна вывести сумму, разность и произведение введённых чисел, каждое на отдельной строке.
number3 = int(input())
number4 = int(input())
print(f"{number3} + {number4} = {number3 + number4}\n"
      f"{number3} - {number4} = {number3 - number4}\n"
      f"{number3} * {number4} = {number3 * number4}")
# 2
# 7
#
# 2 + 7 = 9
# 2 - 7 = -5
# 2 * 7 = 14

# Арифметическая прогрессия
# Входные данные
# На вход программе подаётся три целых числа: каждое на отдельной строке.
# Выходные данные
# Программа должна вывести n-ый член арифметической прогрессии.
a1, d, n = int(input()), int(input()), int(input())
print(a1 + d * (n - 1))
# 1
# 1
# 10
#
# 10

# Разделяй и властвуй
# Напишите программу, которая считывает целое положительное число x и выводит на экран последовательность чисел x, 2x, 3x, 4x и 5x, разделённых тремя черточками.
# Формат входных данных
# На вход программе подаётся целое положительное число.
# Формат выходных данных
# Программа должна вывести текст согласно условию задачи.

number5 = int(input())
print(number5, number5*2, number5*3, number5*4, number5*5, sep='---')
# 7
#
# 7---14---21---28---35

