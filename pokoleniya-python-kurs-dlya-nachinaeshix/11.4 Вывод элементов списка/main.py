# 11.4 Вывод элементов списка

# Тема урока: вывод элементов списка

# Вывод списка с помощью for
# Вывод списка с помощью распаковки
# Вывод строки с помощью распаковки

# Аннотация. Вывод элементов списка и строки.

# При выводе содержимого списка с помощью функции print()  вывод элементов осуществляется в квадратных скобках,
# причем все элементы разделены запятой. Такой вывод не всегда удобен и предпочтителен, поэтому нужно уметь выводить
# элементы списка нужным нам способом.

# Вывод с помощью цикла for

# Для вывода элементов списка каждого на отдельной строке можно использовать следующий код:

# Вариант 1. Если нужны индексы элементов:
numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

for i in range(len(numbers)):
    print(numbers[i])
# 0
# 1
# 2
# 3
# 4
# 5
# 6
# 7
# 8
# 9
# 10

# Мы передаем в функцию range() длину списка len(numbers). В нашем случае длина списка numbers, равна 11.
# Таким образом вызов функции range(len(numbers)) имеет вид range(11) и переменная цикла i последовательно перебирает
# все значения от 0 до 10. Это означает, что выражение numbers[i] последовательно вернет все элементы списка numbers.
# Такой способ итерации списка удобен, когда нам нужен не только сам элемент numbers[i], но и его индекс i.

# Вариант 2. Если индексы не нужны:
numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

for num in numbers:
    print(num)
# 0
# 1
# 2
# 3
# 4
# 5
# 6
# 7
# 8
# 9
# 10

# Этот цикл пройдет по списку numbers, придавая переменной цикла num значение каждого элемента списка (!) в отличие от
# предыдущего цикла, в котором переменная цикла «бегала» по индексам списка.

# Если требуется выводить  элементы списка на одной строке, через пробел, то мы можем использовать
# необязательный параметр end функции print():

numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

for num in numbers:
    print(num, end=' ')
# 0 1 2 3 4 5 6 7 8 9 10

# Вывод с помощью распаковки списка
# В Python есть удобный способ вывода элементов списка без использования цикла for.

# Вариант 1. Вывод элементов списка через один символ пробела:
numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
print(*numbers)
# 0 1 2 3 4 5 6 7 8 9 10

# Такой код выведет:
# 0 1 2 3 4 5 6 7 8 9 10

# Вариант 2. Вывод элементов списка, каждого на отдельной строке
numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
print(*numbers, sep='\n')
# Такой код выведет:
# 0
# 1
# 2
# 3
# 4
# 5
# 6
# 7
# 8
# 9
# 10

# Поскольку строки содержат символы, подобно тому, как списки содержат элементы, то мы можем использовать
# распаковку строк точно так же, как и распаковку списков.

# Такой код:

s = 'Python'

print(*s)
print()
print(*s, sep='\n')

# выведет:

# P y t h o n
#
# P
# y
# t
# h
# o
# n

# Дополните приведенный код, так чтобы он вывел сумму квадратов элементов списка numbers.
numbers = [1, 78, 23, -65, 99, 9089, 34, -32, 0, -67, 1, 11, 111]
total = 0
for i in numbers:
    total += i**2
print(total)
# 82649673

# Значение функции
# На вход программе подается натуральное число n, а затем n целых чисел.
# Напишите программу, которая для каждого введенного числа x выводит значение функции f(x)=x2+2x+1,
# каждое на отдельной строке.

# Формат входных данных
# На вход программе подаются натуральное число n, а затем n целых чисел, каждое на отдельной строке.

# Формат выходных данных
# Программа должна вывести сначала введенные числа, затем пустую строку, а затем соответствующие значения функции.
total = []
count = []
numbers = int(input())
for i in range(numbers):
    num = int(input())
    total.append(num)
    count.append((num + 1)**2)
print(*total, sep='\n')
print()
print(*count, sep='\n')
# Sample Input 1:
#
# 5
# 1
# 2
# 3
# 4
# 5
# Sample Output 1:
#
# 1
# 2
# 3
# 4
# 5
#
# 4
# 9
# 16
# 25
# 36
# Sample Input 2:
#
# 3
# 10
# 20
# 30
# Sample Output 2:
#
# 10
# 20
# 30
#
# 121
# 441
# 961

# Remove outliers
# При анализе данных, собранных в рамках научного эксперимента,
# бывает полезно удалить самое большое и самое маленькое значение.

# На вход программе подается натуральное число n, а затем n различных натуральных чисел.
# Напишите программу, которая удаляет наименьшее и наибольшее значение из указанных чисел,
# а затем выводит оставшиеся числа каждое на отдельной строке, не меняя их порядок.

# Формат входных данных
# На вход программе подаются натуральное число n, а затем n различных натуральных чисел, каждое на отдельной строке.

# Формат выходных данных
# Программа должна вывести текст в соответствии с условием задачи.
total = []
numbers = int(input())
for i in range(numbers):
    num = int(input())
    total.append(num)

mins = min(total)
maxs = max(total)
for i in total:
    if i != mins and i != maxs:
        print(i)

n = int(input())

mx_ind = 0
mn_ind = 0
seq = []
for _ in range(n):
    seq.append(int(input()))

for i in range(n):
    if seq[i] > seq[mx_ind]:
        mx_ind = i
    if seq[i] < seq[mn_ind]:
        mn_ind = i

del seq[max(mx_ind, mn_ind)]
del seq[min(mx_ind, mn_ind)]

print(*seq, sep="\n")
# Sample Input:
#
# 10
# 9
# 17
# 189
# 3
# 55
# 78
# 11
# 7
# 888
# 160
# Sample Output:
#
# 9
# 17
# 189
# 55
# 78
# 11
# 7
# 160

# Без дубликатов
# На вход программе подается натуральное число n, а затем n строк.
# Напишите программу, которая выводит только уникальные строки, в том же порядке, в котором они были введены.

# Формат входных данных
# На вход программе подаются натуральное число n, а затем n строк, каждая на отдельной строке.

# Формат выходных данных
# Программа должна вывести текст в соответствии с условием задачи.

# Примечание. Считайте, что все строки состоят из строчных символов.
total = []
numbers = int(input())
for i in range(numbers):
    text = input()
    if text not in total:
        total.append(text)
print(*total, sep='\n')
# Sample Input:
#
# 5
# first
# second
# first
# third
# second
# Sample Output:
#
# first
# second
# third

# Google search - 1
# На вход программе подается натуральное число n, затем n строк, затем еще одна строка — поисковый запрос.
# Напишите программу, которая выводит все введенные строки, в которых встречается поисковый запрос.

# Формат входных данных
# На вход программе подаются натуральное число n — количество строк,
# затем сами строки в указанном количестве, затем один поисковый запрос.

# Формат выходных данных
# Программа должна вывести все введенные строки, в которых встречается поисковый запрос.

# Примечание. Поиск не должен быть чувствителен к регистру символов.
total = []
numbers = int(input())
for i in range(numbers):
    text = input()
    total.append(text)
search = input()
for j in total:
    if search.lower() in j.lower():
        print(j)
# Sample Input:
#
# 5
# Язык Python прекрасен
# C# - отличный язык программирования
# Stepik - отличная платформа
# BEEGEEK FOREVER!
# язык Python появился 20 февраля 1991
# язык
# Sample Output:
#
# Язык Python прекрасен
# C# - отличный язык программирования
# язык Python появился 20 февраля 1991

# Google search - 2 🌶️🌶️
# На вход программе подается натуральное число n, затем n строк, затем число k — количество поисковых запросов,
# затем k строк — поисковые запросы. Напишите программу, которая выводит все введенные строки, в которых встречаются
# одновременно все поисковые запросы.

# Формат входных данных
# На вход программе подаются натуральное число n — количество строк, затем сами строки в указанном количестве,
# затем число k, затем сами поисковые запросы.

# Формат выходных данных
# Программа должна вывести все введенные строки, в которых встречаются все поисковые запросы.

# Примечание. Поиск не должен быть чувствителен к регистру символов.
total = []
numbers = int(input())
for i in range(numbers):
    text = input()
    total.append(text)

count = []
num_search = int(input())
for j in range(num_search):
    search = input()
    count.append(search)

for d in range(len(total)):
    count1 = 0
    for s in range(len(count)):
        if count[s].lower() in total[d].lower():
            count1 += 1
    if count1 == len(count):
        print(total[d])

n = int(input())

strings = []
for _ in range(n):
    s = input()
    strings.append(s)

k = int(input())

search_queries = []
for _ in range(k):
    search_query = input()
    search_queries.append(search_query)

for s in strings:
    for search_query in search_queries:
        if search_query.lower() not in s.lower():
            break
    else:
        print(s)

# Sample Input:
#
# 5
# Язык Python прекрасен
# C# - отличный язык программирования
# Stepik - отличная платформа
# BEEGEEK FOREVER!
# язык Python появился 20 февраля 1991
# 2
# язык
# python
# Sample Output:
#
# Язык Python прекрасен
# язык Python появился 20 февраля 1991

# Negatives, Zeros and Positives
# На вход программе подается натуральное число n, а затем n целых чисел.
# Напишите программу, которая сначала выводит все отрицательные числа, затем нули, а затем все положительные числа,
# каждое на отдельной строке. Числа должны быть выведены в том же порядке, в котором они были введены.

# Формат входных данных
# На вход программе подаются натуральное число n, а затем n целых чисел, каждое на отдельной строке.

# Формат выходных данных
# Программа должна вывести текст в соответствии с условием задачи.
total1 = []
total2 = []
total3 = []
numbers = int(input())
for i in range(numbers):
    num = int(input())
    if num < 0:
        total1.append(num)
    elif num == 0:
        total2.append(num)
    elif num > 0:
        total3.append(num)
print(*total1, sep='\n')
print(*total2, sep='\n')
print(*total3, sep='\n')

negatives, zeros, positives = [], [], []

n = int(input())
for _ in range(n):
    cur = int(input())
    if cur < 0:
        negatives.append(cur)
    elif cur > 0:
        positives.append(cur)
    else:
        zeros.append(cur)

res = negatives + zeros + positives
print(*res, sep="\n")

# Sample Input 1:
#
# 7
# 3
# -4
# 1
# 0
# -1
# 0
# -2
# Sample Output 1:
#
# -4
# -1
# -2
# 0
# 0
# 3
# 1
# Sample Input 2:
#
# 5
# 4
# 3
# -2
# -10
# 0
# Sample Output 2:
#
# -2
# -10
# 0
# 4
# 3













