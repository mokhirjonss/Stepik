# 2.2 Команды print и input

# Тема урока: ввод-вывод данных
# Вывод данных, команда print()
# Ввод данных, команда input()
# Решение задач
# Аннотация. Ввод и вывод данных в языке Python. Несложные программы, которые умеют что-то выводить на экран (команда print()) и считывать информацию с клавиатуры (команда input()).
#
# Вывод данных, команда print
# Для вывода данных на экран используется команда print().
#
# Внутри круглых скобок пишем, что хотим вывести на экран. Если это текст, то обязательно указываем его внутри кавычек. Кавычки могут быть одинарными или двойными. До и после текста мы ставим только одинаковые кавычки.
#
# Например, следующий код:
print("Мы изучаем язык Python")
# выведет на экран текст:
#
# Мы изучаем язык Python
# Если вы используете IDE VS Code, то вывод появится в окне TERMINAL.

# Запомни: кавычки могут быть и одинарными, и двойными. Следующие две строки делают одно и то же.
print('Python')
print("Python")
# То, что мы пишем в круглых скобках у команды print(), называется аргументами или параметрами команды.

# Команда print() позволяет указывать несколько аргументов, в таком случае их надо отделять запятыми. Если вы не будете писать запятые между аргументами, Python воспримет это как синтаксическую ошибку.
#
# Например, следующий код:

print('Скоро я', 'буду программировать', 'на языке', 'Python!')
# выведет на экран текст:
#
# Скоро я⎵буду программировать⎵на языке⎵Python!

# Обратите внимание, в качестве разделителя при выводе данных между аргументами команды используется символ пробел. По умолчанию команда print() добавляет ровно один пробел между всеми своими аргументами. Например, следующая программа:
print('1', '2', '4', '8', '16')
# выводит числа 1 2 4 8 16. Числа выведены ровно через один пробел.

# Запомни: при написании кода между аргументами команды print() после запятой мы ставим 1 символ пробел. Это общепринятое соглашение в языке Python. Этот символ пробела не влияет на вывод данных. Это просто для читабельности кода.

# Примечания
# Примечание 1. Команда print() записывается только маленькими буквами, другое написание недопустимо, так как в Python строчные и заглавные буквы различны.

# Примечание 2. Каждая последующая команда print() выводит указанный текст с новой строки. Например, следующая программа:
print('Какой хороший день!')
print('Работать мне не лень!')
# выведет на экран две строки:
#
# Какой хороший день!
# Работать мне не лень!

# Примечание 3. Команда print() с пустым списком аргументов просто вставляет новую пустую строку. Например:
print('Какой хороший день!')
print()
print('Работать мне не лень!')
# Какой хороший день!
#
# Работать мне не лень!

# Примечание 4. Почему в Python можно использовать как одинарные, так и двойные кавычки для обрамления текста? Ответ очень прост — часто кавычки являются частью текста. И чтобы Python мог правильно распознать такой текст, пользуемся разными:
#
# если в тексте нужны одинарные кавычки, то для обрамления такого текста используем двойные кавычки;
# если в тексте нужны двойные кавычки, то обрамляем его одинарными.
# Результатом выполнения кода:
print('В тексте есть "двойные" кавычки')
print("В тексте есть 'одинарные' кавычки")
# будет:
# В тексте есть "двойные" кавычки
# В тексте есть 'одинарные' кавычки

# Команда print() используется для вывода данных на экран

# Значения для вывода, указываемые через запятую в команде print(), называются
# аргументами
# параметрами

# Здравствуй, мир!
# Напишите программу, которая выводит на экран текст «Здравствуй, мир!» (без кавычек).
#
# Примечание 1. Проверяющая система будет сравнивать результат вашей программы и правильный ответ посимвольно. Это означает, что выводить нужно ровно такую строку, которая указана в условии задачи.
#
# Примечание 2. Проверяющая система пользуется стандартным выводом (stdout, команда print()).
# Здравствуй, мир!
print("Здравствуй, мир!")

# Счастливая последовательность 1
# В популярном сериале «Остаться в живых» использовалась последовательность чисел 4 8 15 16 23 42, которая принесла героям удачу и помогла сорвать джекпот в лотерее. Напишите программу, которая выводит данную последовательность чисел с одним пробелом между ними.
#
# Примечание. Текст '4 8 15 16 23 42' не использовать. Воспользуйтесь возможностью команды print() выводить несколько аргументов, указанных через запятую.
# 4 8 15 16 23 42
print('4', '8', '15', '16', '23', '42')

# Счастливая последовательность 2
# Измените предыдущую программу так, чтобы каждое число последовательности
# 4 8 15 16 23 42 печаталось на отдельной строке.
#
# Примечание. Каждая последующая команда print() выводит указанный текст, начиная с новой строки.
# 4
# 8
# 15
# 16
# 23
# 42
print('4')
print('8')
print('15')
print('16')
print('23')
print('42')

# Звездный треугольник
# Напишите программу, которая выводит указанный треугольник, состоящий из звездочек (*).
# *
# **
# ***
# ****
# *****
# ******
# *******
print('*')
print('**')
print('***')
print('****')
print('*****')
print('******')
print('*******')

# Ввод данных, команда input
# Все предыдущие программы выводили на экран текст, известный в момент написания программного кода. Однако программы могут работать с данными, которые станут известны только во время выполнения программы. Другими словами, программы могут считывать данные, а затем их использовать.
#
# Для считывания данных в языке Python используется команда input().
#
# Рассмотрим следующую программу:
print('Как тебя зовут?')
name = input()
print('Привет,', name)
# Как тебя зовут?
# Мохир
# Привет, Мохир

# Сначала программа распечатает текст на экран «Как тебя зовут?». Далее программа будет ждать от пользователя ввода данных. Ввод данных реализуется с помощью команды input().
#
# Команда input() всегда пишется с круглыми скобками. Она работает так: когда программа доходит до места, где есть input(), она ждет, пока пользователь введёт текст с клавиатуры (ввод завершается нажатием клавиши Enter). Введенная строка подставляется на место input().
#
# Если вы используете IDE VS Code, то у вас вывод будет требоваться в окне терминала. Сюда и нужно вводить текст. Для других IDE ситуация аналогичная.

# Если вы ввели строку «Parrot», программа дальше будет работать так, как будто на месте input() было написано «Parrot».
#
# Таким образом, input() получает от пользователя какие-то данные и вместо вызова подставляет строковое значение, в нашем случае записывает его в качестве значения переменной name.
#
# Что такое переменные и что значит сохранить в переменной значение, подробнее поговорим чуть позже, однако для решения следующих задач используйте переменные, которые состоят только из латиницы, не содержат внутри себя пробелов, могут включать символ нижнего подчёркивания. Например, такие названия для переменных хорошие:
#
# name, age, team, string, string_1, string_2, string_666
# Запоминаем:
#
# Команда print() выводит на экран данные.
#
# Команда input() считывает введенные с клавиатуры данные.

# Примечания
# Примечание. Очень часто перед считыванием данных мы печатаем некоторый текст, чтобы пользователь, который вводит эти данные, понимал, что именно от него требуется. Например, в программе
print('Как тебя зовут?')
name = input()
print('Привет,', name)
# Как тебя зовут?
# Mokhirjon
# Привет, Mokhirjon

# мы сначала выведем текст «Как тебя зовут?», а уже потом считаем данные.
#
# Поскольку это достаточно распространённый сценарий, то в языке Python можно выводить текст, передавая его в качестве параметра в команду input(). Предыдущий код можно переписать так:

# сначала тут печатается строка "Как тебя зовут", а потом принимается на вход имя
name = input('Как тебя зовут?')

# тут просто выводится строка "Привет", после неё идёт пробел и ввыденноё нами имя
print('Привет,', name)

# То есть команда input() при наличии аргументов внутри неё отрабатывает одновременно как вывод текста, а потом ввод текста (именно в этом порядке). Однако в задачах нашего курса нужно использовать функцию input() без параметров! Так как это будет лишний вывод, ваша программа не будет проходить тесты.

# Команда input() используется для считывания данных с клавиатуры

# Установите порядок действий:
#
print('Какой язык программирования ты изучаешь?')
language = input()
print(language, '- отличный выбор!')
# Вывод текста «Какой язык программирования ты изучаешь?»
# Ввод данных (пользователь вводит текст)
# Нажатие клавиши Enter
# Запись введенного текста в переменную language
# Вывод текста

# Приветствие
# На вход программе подается строка текста – имя человека. Напишите программу, которая выводит на экран приветствие в виде слова «Привет» (без кавычек), после которого должна стоять запятая и пробел, а затем введенное имя.
#
# Формат входных данных
# На вход программе подаётся одна строка — имя человека.
#
# Формат выходных данных
# Программа должна вывести текст в соотвествии с условием задачи.
#
# Примечание 1. Для считывания текста используйте команду input(), для печати текста на экране используйте команду
#
# print().
#
# Примечание 2. Не используйте никакой текст и никакие другие аргументы внутри функции input(), т.к. это повлияет на вывод и ваша программа не пройдёт тесты.

name = input()
print('Привет,', name)
# Тимур
# Привет, Тимур

# Любимая команда
# На вход программе подается строка текста – название футбольной команды. Напишите программу, которая повторяет ее на экране со словами « - чемпион!» (без кавычек).
#
# Формат входных данных
# На вход программе подается название футбольной команды.
#
# Формат выходных данных
# Программа должна вывести текст согласно условиям задачи.
#
# Примечание 1. Для считывания текста используйте команду input(), для печати текста на экране используйте команду print().
#
# Примечание 2. Не используйте никакой текст и никакие другие аргументы внутри функции input(), т.к. это повлияет на вывод и ваша программа не пройдёт тесты.

name = input()
print(name, '- чемпион!')
# Барселона
# Барселона - чемпион!

# Повторяй за мной
# Напишите программу, которая считывает три строки по очереди, а затем выводит их в той же последовательности, каждую на отдельной строчке.
#
# Формат входных данных
# На вход программе подаются три строки, каждая на отдельной строке.
#
# Формат выходных данных
# Программа должна вывести введенные строки в той же последовательности, каждую на отдельной строке.
#
# Примечание 1. Для считывания текста используйте команду input(), для печати текста на экране используйте команду print().
#
# Примечание 2. Не используйте никакой текст и никакие другие аргументы внутри функции input(), т.к. это повлияет на вывод и ваша программа не пройдёт тесты.

word1 = input()
word2 = input()
word3 = input()
print(word1)
print(word2)
print(word3)
# I was
# born
# this way

# Повторяй за мной 2
# Напишите программу, которая считывает три строки по очереди, а затем выводит их в обратной последовательности, каждую на отдельной строчке.
#
# Формат входных данных
# На вход программе подается три строки, каждая на отдельной строке.
#
# Формат выходных данных
# Программа должна вывести введенные строки в обратной последовательности, каждую на отдельной строке.
#
# Примечание 1. Используйте
# 3
# 3 переменные для сохранения введённых строк текста.
#
# Примечание 2. Не используйте никакой текст и никакие другие аргументы внутри функции input(), т.к. это повлияет на вывод и ваша программа не пройдёт тесты.

firs_line = input()
second_line = input()
third_line = input()

print(third_line)
print(second_line)
print(firs_line)
# Hello
# it's
# me
#
# me
# it's
# Hello


